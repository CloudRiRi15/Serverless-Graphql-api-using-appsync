AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Student Information System GraphQL API

Resources:
  # Define an AppSync GraphQL API
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: StudentInfoGraphQLApi
      AuthenticationType: API_KEY # You can use other authentication methods like Cognito
      SchemaDefinition: schema.graphql # Replace with your GraphQL schema definition file name

  # Define the GraphQL schema data source
  DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      Name: StudentInfoDataSource
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt GraphQLFunction.Arn

  # Define the GraphQL resolver
  Resolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      DataSourceName: !GetAtt DataSource.Name
      TypeName: Query
      FieldName: getStudent
      RequestMappingTemplate: '##  Mapping Template ##
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "getStudent",
            "arguments": $util.toJson($context.arguments)
          }
        }'
      ResponseMappingTemplate: '$util.toJson($context.result)'

  # Define the Lambda function for GraphQL resolvers
  GraphQLFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: graphql.lambda_handler
      Runtime: python3.8
      CodeUri: .
      Environment:
        Variables:
          # Define environment variables for database connection, security, etc.
      Policies:
        - DynamoDBCrudPolicy: # Define a policy to access the DynamoDB database

  # Define the IAM role for the Lambda function
  GraphQLFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GraphQLFunctionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess # Adjust permissions as needed

Outputs:
  GraphQLApiEndpoint:
    Description: "GraphQL API Endpoint URL"
    Value: !GetAtt GraphQLApi.GraphQLUrl
  GraphQLApiKey:
    Description: "GraphQL API Key (for authentication)"
    Value: !GetAtt GraphQLApi.ApiKey
